# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on: [ push, pull_request ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Checkout omero-test-infra
        uses: actions/checkout@v2
        with:
          repository: openmicroscopy/omero-test-infra
          submodules: true
          path: .omero
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Append 'SNAPSHOT' to version if 'push' happened on 'master'
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        run: |
          VERSION=$(mvn help:evaluate -N -Dexpression=project.version|grep -v '\[')
          mvn versions:set -DnewVersion=$VERSION-SNAPSHOT
      - name: Append branch name to version if 'push' did not happen on 'master' or a tag
        if: ${{ github.event_name == 'push' && github.ref != 'refs/heads/master' && !startsWith(github.ref, 'refs/tags/')}}
        run: |
          VERSION=$(mvn help:evaluate -N -Dexpression=project.version|grep -v '\[')
          mvn versions:set -DnewVersion=$VERSION-${GITHUB_REF##*/}
      - name: Test with Maven and omero-test-infra through Docker
        run: $GITHUB_WORKSPACE/.omero/lib-docker
        env:
          DOCKER_ARGS: -v ${{ env.HOME }}/.m2:/root/.m2 -v ${{ github.workspace }}/target:/src/target -t
      - name: Set folders ownership back to current user
        run: sudo chown -R $(id -u):$(id -g) $GITHUB_WORKSPACE && sudo chown -R $(id -u):$(id -g) $HOME
      - name: Sonar analysis
        run: mvn sonar:sonar -Dsonar.host.url=$SONAR_URL -Dsonar.projectKey=$SONAR_PROJECTKEY -Dsonar.organization=$SONAR_ORGANIZATION
        env:
          SONAR_PROJECTKEY: GReD-Clermont_simple-omero-client
          SONAR_ORGANIZATION: gred-clermont
          SONAR_URL: https://sonarcloud.io
          GITHUB_TOKEN: ${{ github.token }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Upload to codecov after successful tests
        if: ${{ success() }}
        run: bash <(curl -s https://codecov.io/bash)
      - name: Build package with Maven
        run: mvn -DskipTests -B package --file pom.xml
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: |
            target/*.jar
            !target/*-with-dependencies.jar
      - name: Publish to GitHub Packages Apache Maven
        if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/master' ||  startsWith(github.ref, 'refs/tags/')) }}
        run: mvn deploy -DskipTests -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ github.token }}